name: Publish container

on:
  workflow_dispatch:
    inputs:
      submodule:
        required: true
        type: choice
        description: Submodule to build and push
        options:
          - drone-gitea-release
          - drone-git
          - drone-runner-docker
          - drone-cache
          - mingit

jobs:
  build:
    name: Publish ${{ github.event.inputs.submodule }}
    runs-on: windows-2022
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Determine Project Build Variables
        id: build_vars
        shell: python
        run: |
          project = "${{ github.event.inputs.submodule }}"
          if project == "drone-gitea-release":
              go_build_object = "release/windows/amd64/drone-gitea-release.exe"
              docker_file = f"{project}/docker/Dockerfile.windows.2022"
          elif project == "drone-git":
              go_build_object = "None"
              docker_file = f"{project}/docker/Dockerfile.windows.2022"
          elif project == "drone-runner-docker":
              go_build_object = "release/windows/amd64/drone-runner-docker.exe"
              docker_file = f"{project}/docker/Dockerfile.windows.amd64.2022"
          elif project == "drone-cache":
              go_build_object = "None"
              docker_file = f"{project}/docker/Dockerfile.windows.2022"
          elif project == "mingit":
              go_build_object = "None"
              docker_file = f"{project}/docker/Dockerfile.windows.2022"
          else:
              raise SystemExit(1)

          print(f"::set-output name=go_build_object::{go_build_object}")
          print(f"::set-output name=docker_file::{docker_file}")

      - name: Setup Go
        if: ${{ steps.build_vars.outputs.go_build_object != 'None' }}
        uses: actions/setup-go@v2

      - name: Build go code
        if: ${{ steps.build_vars.outputs.go_build_object != 'None' }}
        run: |
          cd ${{ github.event.inputs.submodule }}
          go vet ./...
          go build -v -o ${{ steps.build_vars.outputs.go_build_object }}

      - name: Build and push image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: ${{ github.event.inputs.submodule }}
          tags: ltsc2022
          registry: ghcr.io
          dockerfile: ${{ steps.build_vars.outputs.docker_file }}
          directory: ${{ github.event.inputs.submodule }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
